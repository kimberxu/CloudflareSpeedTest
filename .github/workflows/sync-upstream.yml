# 工作流名称
name: Sync Upstream Fork

# 触发器配置
on:
  # 允许在 Actions 页面手动触发此工作流
  workflow_dispatch:

  # 定时任务：每周一的 02:00 UTC (北京时间上午10点)
  schedule:
    - cron: '0 2 * * 1'

# 任务配置
jobs:
  sync:
    # 运行环境
    runs-on: ubuntu-latest

    # 为此任务授予权限，允许它写入仓库内容（即 git push）
    permissions:
      contents: write

    # 步骤
    steps:
      # 第一步：检出（Checkout）你自己的仓库
      # 这一步会自动使用 GITHUB_TOKEN 来进行认证
      - name: Checkout Fork
        uses: actions/checkout@v4
        with:
          # 获取所有历史记录，以便进行合并
          fetch-depth: 0

      # 第二步：执行同步脚本
      - name: Sync with Upstream
        run: |
          # 配置 Git 用户信息，让提交记录显示为由 actions-bot 操作
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # 动态获取你仓库的默认分支名 (main 或 master)
          LOCAL_BRANCH="${{ github.ref_name }}"
          echo "Local default branch is ${LOCAL_BRANCH}"

          # 添加上游（upstream）仓库的远程地址
          # 上游仓库是 XIU2/CloudflareSpeedTest
          git remote add upstream https://github.com/XIU2/CloudflareSpeedTest.git
          
          # 从上游仓库获取所有分支和标签
          git fetch upstream
          
          echo "Merging from upstream/master into ${LOCAL_BRANCH}..."

          # 将上游仓库的 master 分支合并到你的默认分支
          # (经检查，上游仓库的主分支是 master)
          git merge upstream/master --no-edit
          
          # 将合并后的代码（包括所有新标签）推送到你自己的仓库
          echo "Pushing changes and tags to origin/${LOCAL_BRANCH}..."
          git push origin "${LOCAL_BRANCH}" --follow-tags
